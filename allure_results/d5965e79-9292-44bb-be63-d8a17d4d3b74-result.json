{"name": "get_price() - получение стоимости бургера: только соус без булок", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'get_price'", "trace": "self = <test_burger.TestBurger object at 0x000001EFD2709A00>\nmock_ingredient_class = <MagicMock name='Ingredient' id='2129550107584'>, mock_bun_class = <MagicMock name='Bun' id='2129550103072'>\n\n    @allure.title('get_price() - получение стоимости бургера: только соус без булок')\n    @allure.description('Проверяем, что программа не ломается и метод возвращает правильную стоимость')\n    @patch('burger.Bun')\n    @patch('burger.Ingredient')\n    # 4:    [False, True, False, 100],  # только соус без булок\n    def test_get_price_with_sauce(self,\n                       mock_ingredient_class,\n                       mock_bun_class):\n        # создаем моки для булок и ингредиентов\n        mock_sauce = Mock()\n        # назначаем мокам возвращаемое значение для метода get_price()\n        mock_sauce.get_price.return_value = b.SAUCE_PRICE\n        # создаем бургер и добавляем в него булки и ингредиенты\n        burger = Burger()\n        burger.add_ingredient(mock_sauce)\n    \n        # проверяем, что метод get_price() возвращает правильную стоимость\n>       assert burger.get_price() == p.SAUCE_PRICE      # = 100\n\ntests\\test_burger.py:343: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <burger.Burger object at 0x000001EFD2F60530>\n\n    def get_price(self) -> float:\n>       price = self.bun.get_price() * 2\nE       AttributeError: 'NoneType' object has no attribute 'get_price'\n\nburger.py:32: AttributeError"}, "description": "Проверяем, что программа не ломается и метод возвращает правильную стоимость", "start": 1704819164079, "stop": 1704819164079, "uuid": "8532c624-aa3a-46eb-93fc-32c68eb68c3e", "historyId": "79fb918cc04710a4789630510b58e03a", "testCaseId": "79fb918cc04710a4789630510b58e03a", "fullName": "tests.test_burger.TestBurger#test_get_price_with_sauce", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_burger"}, {"name": "subSuite", "value": "TestBurger"}, {"name": "host", "value": "DESKTOP-0A7KFK3"}, {"name": "thread", "value": "6484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_burger"}]}